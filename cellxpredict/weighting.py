import numpy as np

per_frame_hist_counts = np.array(
    [  8.,   5.,   2.,   3.,   0.,   5.,   4.,   4.,  11.,  10.,  10.,
      10.,   8.,  10.,  12.,  14.,  12.,  17.,  14.,  13.,  21.,  26.,
      21.,  29.,  34.,  26.,  32.,  27.,  34.,  47.,  36.,  53.,  41.,
      55.,  47.,  56.,  52.,  64.,  52.,  55.,  62.,  62.,  66.,  87.,
      67.,  85.,  98.,  74.,  75.,  73.,  76.,  80.,  92.,  92., 104.,
      95.,  95.,  83.,  98.,  91., 110., 112., 114.,  93., 136., 120.,
     104., 107., 103., 104., 140., 111., 114., 109., 119.,  95., 114.,
     122., 102.,  98., 112., 111., 113.,  95., 121., 115., 106.,  94.,
     119., 116., 125.,  98., 105., 112., 101., 119.,  90.,  89.,  91.,
     101.,  95.,  99.,  98.,  91.,  81.,  95., 108.,  83.,  90., 102.,
      83.,  72.,  80., 115.,  88., 106.,  69., 103.,  70.,  81.,  76.,
      74.,  79.,  83.,  85.,  89.,  93.,  71.,  76.,  79.,  66.,  65.,
      77.,  63.,  84.,  72.,  75.,  85.,  67.,  80.,  64.,  71.,  58.,
      70.,  52.,  64.,  59.,  56.,  56.,  72.,  43.,  61.,  47.,  47.,
      41.,  57.,  68.,  65.,  54.,  48.,  54.,  56.,  50.,  57.,  38.,
      43.,  47.,  49.,  41.,  60.,  45.,  36.,  29.,  33.,  34.,  45.,
      49.,  40.,  36.,  37.,  32.,  43.,  26.,  36.,  32.,  25.,  23.,
      28.,  26.,  27.,  25.,  39.,  31.,  25.,  24.,  28.,  21.,  19.,
      29.,  36.,  24.,  27.,  23.,  24.,  17.,  20.,  17.,  20.,  10.,
      27.,  26.,  21.,  16.,  15.,  22.,  18.,  17.,  16.,  12.,  22.,
       8.,  23.,  17.,  25.,   7.,  17.,  13.,  18.,  18.,  10.,  16.,
      13.,  13.,  14.,  15.,   9.,  12.,  10.,  10.,  17.,  11.,  16.,
       6.,  17.,   7.,   8.,   6.,  19.,  10.,  10.,   8.,   8.,   4.,
      10.,   6.,   9.,   6.,   9.,   7.,   4.,   5.,   6.,   6.,  13.,
       7.,   8.,   3.,  13.,   5.,   3.,   4.,   8.,   6.,   8.,   8.,
       2.,   9.,   4.,   3.,   7.,   5.,   5.,   8.,   5.,   6.,   6.,
       9.,   3.,   4.,   3.,   2.,   7.,   7.,   5.,   5.,   8.,   3.,
       3.,   6.,   9.,   5.,   6.,   4.,   7.,   7.,   5.,   2.,   4.,
       0.,   4.,   2.,   4.,   4.,   2.,   3.,   2.,   3.,   5.,   2.,
       3.,   5.,   2.,   2.,   2.,   1.,   1.,   2.,   6.,   2.,   4.,
       2.,   3.,   3.,   2.,   3.,   4.,   5.,   3.,   3.,   3.,   0.,
       3.,   1.,   4.,   3.,   3.,   2.,   1.,   1.,   3.,   1.,   0.,
       1.,   3.,   3.,   2.,   1.,   3.,   1.,   1.,   3.,   4.,   4.,
       3.,   2.,   3.,   3.,   0.,   1.,   3.,   0.,   1.,   2.,   0.,
       0.,   2.,   0.,   0.,   3.,   3.,   1.,   0.,   1.,   1.,   0.,
       2.,   2.,   0.,   2.,   1.,   0.,   2.,   2.,   3.,   2.,   0.,
       0.,   0.,   0.,   1.,   2.,   1.,   0.,   0.,   0.,   2.,   2.,
       3.,   0.,   2.,   2.,   1.,   0.,   0.,   0.,   3.,   1.,   2.,
       1.,   1.,   1.,   0.,   1.,   1.,   2.,   1.,   0.,   0.,   0.,
       1.,   1.,   1.,   0.,   1.,   1.,   1.,   1.,   1.,   0.,   5.,
       0.,   1.,   1.,   1.,   0.,   0.,   0.,   1.,   1.,   0.]
)


def calculate_class_weights(per_frame_hist_counts: np.ndarray) -> dict:
    class_weighting = {}

    for idx in range(len(per_frame_hist_counts)):

        count = per_frame_hist_counts[idx]
        if count == 0 and idx < len(per_frame_hist_counts) - 1:
            upper_bound = per_frame_hist_counts[idx-1]
            lower_bound = per_frame_hist_counts[idx+1]
            count = np.mean([upper_bound, lower_bound])
        count = 2.0 if count < 2.0 else count

        # bound = idx + 150.0
        bound = idx
        class_weighting[bound] = 1 / count

    return class_weighting


CLASS_WEIGHTS = calculate_class_weights(per_frame_hist_counts)
# print (CLASS_WEIGHTS)

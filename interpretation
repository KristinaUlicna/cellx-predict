import numpy as np
import matplotlib.pyplot as plt
import tensorflow.keras as K

from skimage.util import montage
from visualisation import to_rgb


def latent_space_traversal(decoder: K.models.Model,
                           l1: int,
                           l2: int,
                           l1_values: list or np.array,
                           l2_values: list or np.array):

    latent_dim = decoder.layers[0].input_shape[-1]
    output_shape = decoder.layers[-1].output_shape

    flat_grid = np.zeros((0,) + output_shape[1:], dtype = np.uint8)

    for l1_value in l1_values:
        for l2_value in l2_values:

            latent_vector = np.zeros((latent_dim,))
            latent_vector[l1] = l1_value
            latent_vector[l2] = l2_value

            decoded = decoder.predict(latent_vector)
            decoded = to_rgb(decoded, axis = -1)
            decoded = decoded.astype(np.uint8)

            flat_grid = np.append(flat_grid, decoded, axis = 0)

    output_grid = montage(flat_grid, 
                          grid_shape = (len(l2_values), len(l1_values)), 
                          multichannel = True,
                          fill = [255]*3,
                          padding_width = 3)

    return output_grid







    